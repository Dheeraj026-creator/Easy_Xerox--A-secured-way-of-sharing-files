<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Welcome, <%= name %></title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f4f7fc;
      margin: 0;
      padding: 10px;
      display: flex;
      justify-content: center;
      align-items: flex-start;
      min-height: 100vh;
      box-sizing: border-box;
    }

    .container {
      background: #ffffff;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      border-radius: 10px;
      max-width: 1200px;
      width: 100%;
      display: flex;
      justify-content: space-between;
      flex-wrap: wrap;
      padding: 20px;
      gap: 20px;
    }

    h3 {
      font-size: 20px;
      color: #333;
      text-align: center;
      margin-bottom: 15px;
    }

    .upload-section,
    .files-section {
      flex: 1 1 45%;
      background-color: #f9f9f9;
      border: 1px solid #ddd;
      border-radius: 8px;
      padding: 20px;
      min-width: 300px;
      box-sizing: border-box;
    }

    .file-upload {
      display: flex;
      flex-direction: column;
      align-items: flex-start;
    }

    .file-upload input[type="file"] {
      margin: 10px 0;
      width: 100%;
    }

    .uploaded-files {
      list-style: none;
      padding: 0;
      margin: 0;
    }

    .uploaded-files li {
      background: #f0f0f0;
      border-radius: 5px;
      margin: 6px 0;
      padding: 10px;
      font-size: 15px;
      color: #333;
      display: flex;
      justify-content: space-between;
      align-items: center;
      flex-wrap: wrap;
    }

    .uploaded-files li a {
      text-decoration: none;
      color: #007bff;
      margin-right: 10px;
    }

    .btn-submit {
      background-color: #007bff;
      color: white;
      border: none;
      padding: 12px 18px;
      border-radius: 6px;
      cursor: pointer;
      font-size: 16px;
      width: 100%;
      margin-top: 15px;
      transition: 0.3s;
    }

    .btn-submit:hover {
      background-color: #0056b3;
    }

    .error {
      color: red;
      font-size: 14px;
      margin-top: 10px;
    }

    #countdown-timer {
      font-size: 16px;
      font-weight: bold;
      color: #ff4500;
      background-color: #fff8e1;
      border: 2px solid #ff4500;
      padding: 10px;
      border-radius: 5px;
      text-align: center;
      margin: 20px auto;
      display: none;
      width: fit-content;
      max-width: 90%;
    }

    #timer {
      font-size: 22px;
      color: #ff0000;
    }

    /* RESPONSIVE FIXES */
    @media (max-width: 768px) {
      body {
        padding: 10px;
      }

      .container {
        flex-direction: column;
        align-items: stretch;
      }

      .upload-section,
      .files-section {
        width: 100%;
        min-height: auto;
      }

      .uploaded-files li {
        flex-direction: column;
        align-items: flex-start;
      }

      .uploaded-files li a,
      .uploaded-files li button {
        margin-top: 5px;
      }

      .btn-submit {
        font-size: 15px;
        padding: 10px 14px;
      }

      #countdown-timer {
        font-size: 14px;
        padding: 8px;
      }
    }

    @media (max-width: 480px) {
      h3 {
        font-size: 17px;
      }
      .btn-submit {
        font-size: 14px;
        padding: 8px 10px;
      }
      #timer {
        font-size: 18px;
      }
    }
  </style>
</head>
<body>
  <div class="container">
    <!-- Upload Section -->
    <div class="upload-section">
      <h3>Upload Files</h3>
      <form id="uploadForm" action="/upload/<%= randomCode %>/<%= name %>" method="POST" enctype="multipart/form-data">
        <div class="file-upload">
          <input type="file" name="file" id="fileInput" multiple required />
          <small>Max 5 files can be uploaded at a time.</small>
          <button type="submit" class="btn-submit">Upload File</button>
          <p class="error" id="fileError"></p>
        </div>
      </form>
    </div>

    <!-- Files Display Section -->
    <div class="files-section">
      <h3>Uploaded Files</h3>
      <button id="deleteAllBtn" class="btn-submit">Delete All Files</button>
      <ul class="uploaded-files" id="uploadedFiles"></ul>
    </div>
  </div>

  <!-- Countdown Timer Section -->
  <p id="countdown-timer">
    Files will be deleted in <span id="timer">120</span> seconds.
  </p>

  <script>
    const randomCode = '<%= randomCode %>';
    const name = '<%= name %>';
    const countdownDuration = 120;
    const timerElement = document.getElementById("timer");
    const countdownTimerElement = document.getElementById("countdown-timer");
    countdownTimerElement.style.display = "block";

    let startTime = localStorage.getItem(`countdownStartTime-${randomCode}-${name}`);
    if (!startTime) {
      startTime = Date.now();
      localStorage.setItem(`countdownStartTime-${randomCode}-${name}`, startTime);
    }

    const countdownInterval = setInterval(() => {
      const elapsed = Math.floor((Date.now() - startTime) / 1000);
      const remaining = countdownDuration - elapsed;
      if (remaining > 0) {
        timerElement.textContent = remaining;
      } else {
        clearInterval(countdownInterval);
        timerElement.textContent = 0;
        fetch(`/deleteAll/${randomCode}/${name}`, { method: "DELETE" })
          .then((res) => res.json())
          .then((data) => {
            alert(data.message);
            document.getElementById("uploadedFiles").innerHTML = "";
            localStorage.removeItem(`countdownStartTime-${randomCode}-${name}`);
          })
          .catch((err) => console.error("Error deleting files:", err));
      }
    }, 1000);

    const fileInput = document.getElementById("fileInput");
    const fileError = document.getElementById("fileError");
    const uploadForm = document.getElementById("uploadForm");
    const uploadedFilesList = document.getElementById("uploadedFiles");
    const deleteAllBtn = document.getElementById("deleteAllBtn");

    fileInput.addEventListener("change", () => {
      if (fileInput.files.length > 5) {
        fileError.textContent = "You can upload a maximum of 5 files.";
        fileInput.value = "";
      } else {
        fileError.textContent = "";
      }
    });

    uploadForm.addEventListener("submit", async (event) => {
      event.preventDefault();
      const formData = new FormData(uploadForm);
      try {
        const response = await fetch(uploadForm.action, { method: "POST", body: formData });
        if (response.ok) {
          const files = await response.json();
          displayUploadedFiles(files);
        } else {
          const err = await response.json();
          alert(err.error || "Upload error");
        }
      } catch (err) {
        console.error(err);
        alert("Upload error");
      }
    });

    deleteAllBtn.addEventListener("click", async () => {
      try {
        const response = await fetch(`/deleteAll/${randomCode}/${name}`, { method: "DELETE" });
        if (response.ok) {
          const data = await response.json();
          alert(data.message);
          uploadedFilesList.innerHTML = "";
          localStorage.removeItem(`countdownStartTime-${randomCode}-${name}`);
        }
      } catch (err) {
        console.error(err);
      }
    });

    function displayUploadedFiles(files) {
      uploadedFilesList.innerHTML = "";
      files.forEach((file) => {
        const li = document.createElement("li");
        li.textContent = file + " ";

        const downloadLink = document.createElement("a");
        downloadLink.href = `/download/${randomCode}/${name}/${file}`;
        downloadLink.target = "_blank";
        downloadLink.textContent = "Download";

        const deleteBtn = document.createElement("button");
        deleteBtn.textContent = "Delete";
        deleteBtn.onclick = () => deleteFile(file);

        li.appendChild(downloadLink);
        li.appendChild(deleteBtn);
        uploadedFilesList.appendChild(li);
      });
    }

    async function deleteFile(fileName) {
      try {
        const response = await fetch(`/delete/${randomCode}/${name}/${fileName}`, { method: "DELETE" });
        if (response.ok) fetchFiles();
      } catch (err) {
        console.error(err);
      }
    }

    async function fetchFiles() {
      try {
        const response = await fetch(`/files/${randomCode}/${name}`);
        if (response.ok) {
          const files = await response.json();
          displayUploadedFiles(files);
        }
      } catch (err) {
        console.error(err);
      }
    }

    document.addEventListener("DOMContentLoaded", fetchFiles);
  </script>
</body>
</html>
